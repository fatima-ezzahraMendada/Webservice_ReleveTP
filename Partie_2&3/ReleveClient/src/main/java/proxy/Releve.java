
package proxy;

import javax.xml.datatype.XMLGregorianCalendar;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Releve", targetNamespace = "http://releve/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Releve {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "toString", targetNamespace = "http://releve/", className = "proxy.ToString")
    @ResponseWrapper(localName = "toStringResponse", targetNamespace = "http://releve/", className = "proxy.ToStringResponse")
    @Action(input = "http://releve/Releve/toStringRequest", output = "http://releve/Releve/toStringResponse")
    public String toString();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRIB", targetNamespace = "http://releve/", className = "proxy.GetRIB")
    @ResponseWrapper(localName = "getRIBResponse", targetNamespace = "http://releve/", className = "proxy.GetRIBResponse")
    @Action(input = "http://releve/Releve/getRIBRequest", output = "http://releve/Releve/getRIBResponse")
    public String getRIB();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setRIB", targetNamespace = "http://releve/", className = "proxy.SetRIB")
    @ResponseWrapper(localName = "setRIBResponse", targetNamespace = "http://releve/", className = "proxy.SetRIBResponse")
    @Action(input = "http://releve/Releve/setRIBRequest", output = "http://releve/Releve/setRIBResponse")
    public void setRIB(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns javax.xml.datatype.XMLGregorianCalendar
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDateReleve", targetNamespace = "http://releve/", className = "proxy.GetDateReleve")
    @ResponseWrapper(localName = "getDateReleveResponse", targetNamespace = "http://releve/", className = "proxy.GetDateReleveResponse")
    @Action(input = "http://releve/Releve/getDateReleveRequest", output = "http://releve/Releve/getDateReleveResponse")
    public XMLGregorianCalendar getDateReleve();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setDateReleve", targetNamespace = "http://releve/", className = "proxy.SetDateReleve")
    @ResponseWrapper(localName = "setDateReleveResponse", targetNamespace = "http://releve/", className = "proxy.SetDateReleveResponse")
    @Action(input = "http://releve/Releve/setDateReleveRequest", output = "http://releve/Releve/setDateReleveResponse")
    public void setDateReleve(
        @WebParam(name = "arg0", targetNamespace = "")
        XMLGregorianCalendar arg0);

    /**
     * 
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSolde", targetNamespace = "http://releve/", className = "proxy.GetSolde")
    @ResponseWrapper(localName = "getSoldeResponse", targetNamespace = "http://releve/", className = "proxy.GetSoldeResponse")
    @Action(input = "http://releve/Releve/getSoldeRequest", output = "http://releve/Releve/getSoldeResponse")
    public double getSolde();

    /**
     * 
     * @return
     *     returns proxy.Operations
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOp", targetNamespace = "http://releve/", className = "proxy.GetOp")
    @ResponseWrapper(localName = "getOpResponse", targetNamespace = "http://releve/", className = "proxy.GetOpResponse")
    @Action(input = "http://releve/Releve/getOpRequest", output = "http://releve/Releve/getOpResponse")
    public Operations getOp();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setOp", targetNamespace = "http://releve/", className = "proxy.SetOp")
    @ResponseWrapper(localName = "setOpResponse", targetNamespace = "http://releve/", className = "proxy.SetOpResponse")
    @Action(input = "http://releve/Releve/setOpRequest", output = "http://releve/Releve/setOpResponse")
    public void setOp(
        @WebParam(name = "arg0", targetNamespace = "")
        Operations arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setSolde", targetNamespace = "http://releve/", className = "proxy.SetSolde")
    @ResponseWrapper(localName = "setSoldeResponse", targetNamespace = "http://releve/", className = "proxy.SetSoldeResponse")
    @Action(input = "http://releve/Releve/setSoldeRequest", output = "http://releve/Releve/setSoldeResponse")
    public void setSolde(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

}
